{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name distributed-hash-tool.origin, :imports nil, :requires {q quil.core, quil.core quil.core, distributed-hash-tool.constant distributed-hash-tool.constant}, :uses {radius distributed-hash-tool.constant}, :defs {point {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\origin.cljs", :line 5, :column 7, :end-line 5, :end-column 12, :arglists (quote ([] [angle-in-degrees])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [angle-in-degrees]), :arglists ([] [angle-in-degrees]), :arglists-meta (nil nil)}}, :name distributed-hash-tool.origin/point, :variadic false, :file "src\\distributed_hash_tool\\origin.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [angle-in-degrees]), :arglists ([] [angle-in-degrees]), :arglists-meta (nil nil)}, :method-params ([] [angle-in-degrees]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists ([] [angle-in-degrees])}, slope {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\origin.cljs", :line 11, :column 7, :end-line 11, :end-column 12, :arglists (quote ([x y] [x1 y1 x2 y2])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([x y] [x1 y1 x2 y2]), :arglists ([x y] [x1 y1 x2 y2]), :arglists-meta (nil nil)}}, :name distributed-hash-tool.origin/slope, :variadic false, :file "src\\distributed_hash_tool\\origin.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([x y] [x1 y1 x2 y2]), :arglists ([x y] [x1 y1 x2 y2]), :arglists-meta (nil nil)}, :method-params ([x y] [x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 4, :fn-var true, :arglists ([x y] [x1 y1 x2 y2])}, y-intercept {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\origin.cljs", :line 17, :column 7, :end-line 17, :end-column 18, :arglists (quote ([slope]))}, :name distributed-hash-tool.origin/y-intercept, :variadic false, :file "src\\distributed_hash_tool\\origin.cljs", :end-column 18, :method-params ([slope]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([slope]))}, distance {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\origin.cljs", :line 20, :column 7, :end-line 20, :end-column 15, :arglists (quote ([x y] [x1 y1 x2 y2])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([x y] [x1 y1 x2 y2]), :arglists ([x y] [x1 y1 x2 y2]), :arglists-meta (nil nil)}}, :name distributed-hash-tool.origin/distance, :variadic false, :file "src\\distributed_hash_tool\\origin.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([x y] [x1 y1 x2 y2]), :arglists ([x y] [x1 y1 x2 y2]), :arglists-meta (nil nil)}, :method-params ([x y] [x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 4, :fn-var true, :arglists ([x y] [x1 y1 x2 y2])}, draw {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\origin.cljs", :line 28, :column 7, :end-line 28, :end-column 11, :arglists (quote ([]))}, :name distributed-hash-tool.origin/draw, :variadic false, :file "src\\distributed_hash_tool\\origin.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :x}, :order [:x :y]}, :doc nil}