{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name distributed-hash-tool.core, :imports nil, :requires {q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {update-step {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 69, :column 7, :end-line 69, :end-column 18, :arglists (quote ([step-function animation-list]))}, :name distributed-hash-tool.core/update-step, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 18, :method-params ([step-function animation-list]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([step-function animation-list]))}, alphabet-range {:name distributed-hash-tool.core/alphabet-range, :file "src\\distributed_hash_tool\\core.cljs", :line 7, :column 1, :end-line 7, :end-column 20, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 7, :column 6, :end-line 7, :end-column 20}, :tag string}, distance {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 128, :column 7, :end-line 128, :end-column 15, :arglists (quote ([x1 y1 x2 y2]))}, :name distributed-hash-tool.core/distance, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 15, :method-params ([x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x1 y1 x2 y2]))}, y-intercept-from-origin {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 125, :column 7, :end-line 125, :end-column 30, :arglists (quote ([slope]))}, :name distributed-hash-tool.core/y-intercept-from-origin, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 30, :method-params ([slope]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([slope]))}, draw-state {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 191, :column 7, :end-line 191, :end-column 17, :arglists (quote ([{:keys [number-of-nodes put-animation-map get-animation-map mode]}]))}, :name distributed-hash-tool.core/draw-state, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 17, :method-params ([p__21224]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 191, :end-line 191, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [number-of-nodes put-animation-map get-animation-map mode]}]))}, draw-data-point {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 138, :column 7, :end-line 138, :end-column 22, :arglists (quote ([node-x node-y data-point]))}, :name distributed-hash-tool.core/draw-data-point, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 22, :method-params ([node-x node-y data-point]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 3, :fn-var true, :arglists (quote ([node-x node-y data-point]))}, update-state {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 96, :column 7, :end-line 96, :end-column 19, :arglists (quote ([state]))}, :name distributed-hash-tool.core/update-state, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, slope-from-origin {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 122, :column 7, :end-line 122, :end-column 24, :arglists (quote ([x y]))}, :name distributed-hash-tool.core/slope-from-origin, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 24, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, node-get {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 241, :column 7, :end-line 241, :end-column 15, :arglists (quote ([state key]))}, :name distributed-hash-tool.core/node-get, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 15, :method-params ([state key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state key]))}, simple-hash {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 204, :column 7, :end-line 204, :end-column 18, :arglists (quote ([value]))}, :name distributed-hash-tool.core/simple-hash, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 18, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 204, :end-line 204, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, filter-step {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 79, :column 7, :end-line 79, :end-column 18, :arglists (quote ([step-predicate animation-list]))}, :name distributed-hash-tool.core/filter-step, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 18, :method-params ([step-predicate animation-list]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 2, :fn-var true, :arglists (quote ([step-predicate animation-list]))}, draw-title {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 185, :column 7, :end-line 185, :end-column 17, :arglists (quote ([]))}, :name distributed-hash-tool.core/draw-title, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, radian-positions {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 109, :column 7, :end-line 109, :end-column 23, :arglists (quote ([number-of-nodes]))}, :name distributed-hash-tool.core/radian-positions, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 23, :method-params ([number-of-nodes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number-of-nodes]))}, key-animation-map {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 222, :column 7, :end-line 222, :end-column 24, :arglists (quote ([key step]))}, :name distributed-hash-tool.core/key-animation-map, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 24, :method-params ([key step]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key step]))}, initialize-nodes {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 27, :column 7, :end-line 27, :end-column 23, :arglists (quote ([container number-of-nodes]))}, :name distributed-hash-tool.core/initialize-nodes, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 23, :method-params ([container number-of-nodes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([container number-of-nodes]))}, distributed-hash-tool {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 265, :column 14, :end-line 265, :end-column 35, :export true, :arglists (quote ([]))}, :name distributed-hash-tool.core/distributed-hash-tool, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 35, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 265, :end-line 265, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, keywordize {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 20, :column 7, :end-line 20, :end-column 17, :arglists (quote ([index]))}, :name distributed-hash-tool.core/keywordize, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 17, :method-params ([index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([index]))}, node-put {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 228, :column 7, :end-line 228, :end-column 15, :arglists (quote ([state key]))}, :name distributed-hash-tool.core/node-put, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 15, :method-params ([state key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 228, :end-line 228, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state key]))}, node-contains? {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 210, :column 7, :end-line 210, :end-column 21, :arglists (quote ([node key]))}, :name distributed-hash-tool.core/node-contains?, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 21, :method-params ([node key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 210, :end-line 210, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node key]))}, node-equals? {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 207, :column 7, :end-line 207, :end-column 19, :arglists (quote ([node-entry key]))}, :name distributed-hash-tool.core/node-equals?, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 19, :method-params ([node-entry key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 207, :end-line 207, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node-entry key]))}, grays {:name distributed-hash-tool.core/grays, :file "src\\distributed_hash_tool\\core.cljs", :line 15, :column 1, :end-line 15, :end-column 11, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 15, :column 6, :end-line 15, :end-column 11}, :tag cljs.core/IVector}, colors {:name distributed-hash-tool.core/colors, :file "src\\distributed_hash_tool\\core.cljs", :line 9, :column 1, :end-line 9, :end-column 12, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 9, :column 6, :end-line 9, :end-column 12}, :tag cljs.core/IVector}, draw-origin {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 41, :column 7, :end-line 41, :end-column 18, :arglists (quote ([]))}, :name distributed-hash-tool.core/draw-origin, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-circles {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 175, :column 7, :end-line 175, :end-column 19, :arglists (quote ([radian-positions put-animation-map get-animation-map]))}, :name distributed-hash-tool.core/draw-circles, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 19, :method-params ([radian-positions put-animation-map get-animation-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 175, :end-line 175, :max-fixed-arity 3, :fn-var true, :arglists (quote ([radian-positions put-animation-map get-animation-map]))}, increase-one-step {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 59, :column 7, :end-line 59, :end-column 24, :arglists (quote ([step]))}, :name distributed-hash-tool.core/increase-one-step, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 24, :method-params ([step]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([step]))}, radius {:name distributed-hash-tool.core/radius, :file "src\\distributed_hash_tool\\core.cljs", :line 31, :column 1, :end-line 31, :end-column 12, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 31, :column 6, :end-line 31, :end-column 12}, :tag number}, distance-from-origin {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 135, :column 7, :end-line 135, :end-column 27, :arglists (quote ([x y]))}, :name distributed-hash-tool.core/distance-from-origin, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 27, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, update-animation-map {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 72, :column 7, :end-line 72, :end-column 27, :arglists (quote ([animation-map step-function]))}, :name distributed-hash-tool.core/update-animation-map, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 27, :method-params ([animation-map step-function]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([animation-map step-function]))}, key-press {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 251, :column 7, :end-line 251, :end-column 16, :arglists (quote ([state event]))}, :name distributed-hash-tool.core/key-press, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 16, :method-params ([state event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state event]))}, setup {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 46, :column 7, :end-line 46, :end-column 12, :arglists (quote ([]))}, :name distributed-hash-tool.core/setup, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, decrease-one-step {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 64, :column 7, :end-line 64, :end-column 24, :arglists (quote ([step]))}, :name distributed-hash-tool.core/decrease-one-step, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 24, :method-params ([step]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([step]))}, filter-animation-map {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 82, :column 7, :end-line 82, :end-column 27, :arglists (quote ([animation-map step-predicate]))}, :name distributed-hash-tool.core/filter-animation-map, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 27, :method-params ([animation-map step-predicate]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([animation-map step-predicate]))}, matching-node-index {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 217, :column 7, :end-line 217, :end-column 26, :arglists (quote ([state key]))}, :name distributed-hash-tool.core/matching-node-index, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 26, :method-params ([state key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 217, :end-line 217, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state key]))}, initialize-node {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 23, :column 7, :end-line 23, :end-column 22, :arglists (quote ([container node-index]))}, :name distributed-hash-tool.core/initialize-node, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 22, :method-params ([container node-index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([container node-index]))}, slope {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 117, :column 7, :end-line 117, :end-column 12, :arglists (quote ([x1 y1 x2 y2]))}, :name distributed-hash-tool.core/slope, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 12, :method-params ([x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x1 y1 x2 y2]))}, default-origin {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 38, :column 7, :end-line 38, :end-column 21, :arglists (quote ([]))}, :name distributed-hash-tool.core/default-origin, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-mode {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 179, :column 7, :end-line 179, :end-column 16, :arglists (quote ([mode]))}, :name distributed-hash-tool.core/draw-mode, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 16, :method-params ([mode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 1, :fn-var true, :arglists (quote ([mode]))}, draw-circle {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 155, :column 7, :end-line 155, :end-column 18, :arglists (quote ([coordinates put-animation-map get-animation-map index]))}, :name distributed-hash-tool.core/draw-circle, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 18, :method-params ([coordinates put-animation-map get-animation-map index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 4, :fn-var true, :arglists (quote ([coordinates put-animation-map get-animation-map index]))}, origin {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\core.cljs", :line 33, :column 7, :end-line 33, :end-column 13, :arglists (quote ([angle-in-degrees]))}, :name distributed-hash-tool.core/origin, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 13, :method-params ([angle-in-degrees]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([angle-in-degrees]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :down :get :fn :color :key :else :put-animation-map :get-animation-map :name :mode :update :up :size :number-of-nodes :center :setup :middleware :host :key-pressed :right :host-id :no-start :x :put :draw :step :left :data}, :order [:x :y :number-of-nodes :mode :data :put-animation-map :get-animation-map :put :step :color :center :name :key :up :down :right :left :get :else :host :update :size :setup :middleware :key-pressed :draw :no-start :fn :host-id]}, :doc nil}