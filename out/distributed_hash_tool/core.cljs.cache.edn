{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name distributed-hash-tool.core, :imports nil, :requires {q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {update-step {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 64, :column 7, :end-line 64, :end-column 18, :arglists (quote ([node-list]))}, :name distributed-hash-tool.core/update-step, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 18, :method-params ([node-list]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node-list]))}, alphabet-range {:name distributed-hash-tool.core/alphabet-range, :file "src\\distributed_hash_tool\\core.cljs", :line 7, :column 1, :end-line 7, :end-column 20, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 7, :column 6, :end-line 7, :end-column 20}, :tag string}, distance {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 95, :column 7, :end-line 95, :end-column 15, :arglists (quote ([x1 y1 x2 y2]))}, :name distributed-hash-tool.core/distance, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 15, :method-params ([x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x1 y1 x2 y2]))}, y-intercept-from-origin {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 92, :column 7, :end-line 92, :end-column 30, :arglists (quote ([slope]))}, :name distributed-hash-tool.core/y-intercept-from-origin, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 30, :method-params ([slope]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([slope]))}, draw-state {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 136, :column 7, :end-line 136, :end-column 17, :arglists (quote ([{:keys [number-of-nodes data]}]))}, :name distributed-hash-tool.core/draw-state, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 17, :method-params ([p__8497]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [number-of-nodes data]}]))}, draw-data-point {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 105, :column 7, :end-line 105, :end-column 22, :arglists (quote ([node-x node-y data-point]))}, :name distributed-hash-tool.core/draw-data-point, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 22, :method-params ([node-x node-y data-point]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 3, :fn-var true, :arglists (quote ([node-x node-y data-point]))}, update-state {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 67, :column 7, :end-line 67, :end-column 19, :arglists (quote ([state]))}, :name distributed-hash-tool.core/update-state, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, slope-from-origin {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 89, :column 7, :end-line 89, :end-column 24, :arglists (quote ([x y]))}, :name distributed-hash-tool.core/slope-from-origin, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 24, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, simple-hash {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 145, :column 7, :end-line 145, :end-column 18, :arglists (quote ([value]))}, :name distributed-hash-tool.core/simple-hash, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 18, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, update-one-step {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 59, :column 7, :end-line 59, :end-column 22, :arglists (quote ([step]))}, :name distributed-hash-tool.core/update-one-step, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 22, :method-params ([step]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([step]))}, radian-positions {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 76, :column 7, :end-line 76, :end-column 23, :arglists (quote ([number-of-nodes]))}, :name distributed-hash-tool.core/radian-positions, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 23, :method-params ([number-of-nodes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number-of-nodes]))}, initialize-nodes {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 27, :column 7, :end-line 27, :end-column 23, :arglists (quote ([container number-of-nodes]))}, :name distributed-hash-tool.core/initialize-nodes, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 23, :method-params ([container number-of-nodes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([container number-of-nodes]))}, distributed-hash-tool {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 165, :column 14, :end-line 165, :end-column 35, :export true, :arglists (quote ([]))}, :name distributed-hash-tool.core/distributed-hash-tool, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 35, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, keywordize {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 20, :column 7, :end-line 20, :end-column 17, :arglists (quote ([index]))}, :name distributed-hash-tool.core/keywordize, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 17, :method-params ([index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([index]))}, grays {:name distributed-hash-tool.core/grays, :file "src\\distributed_hash_tool\\core.cljs", :line 15, :column 1, :end-line 15, :end-column 11, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 15, :column 6, :end-line 15, :end-column 11}, :tag cljs.core/IVector}, colors {:name distributed-hash-tool.core/colors, :file "src\\distributed_hash_tool\\core.cljs", :line 9, :column 1, :end-line 9, :end-column 12, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 9, :column 6, :end-line 9, :end-column 12}, :tag cljs.core/IVector}, draw-origin {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 41, :column 7, :end-line 41, :end-column 18, :arglists (quote ([]))}, :name distributed-hash-tool.core/draw-origin, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-circles {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 131, :column 7, :end-line 131, :end-column 19, :arglists (quote ([radian-positions data]))}, :name distributed-hash-tool.core/draw-circles, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 19, :method-params ([radian-positions data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 2, :fn-var true, :arglists (quote ([radian-positions data]))}, radius {:name distributed-hash-tool.core/radius, :file "src\\distributed_hash_tool\\core.cljs", :line 31, :column 1, :end-line 31, :end-column 12, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 31, :column 6, :end-line 31, :end-column 12}, :tag number}, distance-from-origin {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 102, :column 7, :end-line 102, :end-column 27, :arglists (quote ([x y]))}, :name distributed-hash-tool.core/distance-from-origin, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 27, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, key-press {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 148, :column 7, :end-line 148, :end-column 16, :arglists (quote ([state event]))}, :name distributed-hash-tool.core/key-press, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 16, :method-params ([state event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state event]))}, setup {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 46, :column 7, :end-line 46, :end-column 12, :arglists (quote ([]))}, :name distributed-hash-tool.core/setup, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, initialize-node {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 23, :column 7, :end-line 23, :end-column 22, :arglists (quote ([container node-index]))}, :name distributed-hash-tool.core/initialize-node, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 22, :method-params ([container node-index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([container node-index]))}, slope {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 84, :column 7, :end-line 84, :end-column 12, :arglists (quote ([x1 y1 x2 y2]))}, :name distributed-hash-tool.core/slope, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 12, :method-params ([x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x1 y1 x2 y2]))}, default-origin {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 38, :column 7, :end-line 38, :end-column 21, :arglists (quote ([]))}, :name distributed-hash-tool.core/default-origin, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-circle {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 116, :column 7, :end-line 116, :end-column 18, :arglists (quote ([coordinates data index]))}, :name distributed-hash-tool.core/draw-circle, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 18, :method-params ([coordinates data index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 3, :fn-var true, :arglists (quote ([coordinates data index]))}, origin {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\my-sketch2\\src\\distributed_hash_tool\\core.cljs", :line 33, :column 7, :end-line 33, :end-column 13, :arglists (quote ([angle-in-degrees]))}, :name distributed-hash-tool.core/origin, :variadic false, :file "src\\distributed_hash_tool\\core.cljs", :end-column 13, :method-params ([angle-in-degrees]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([angle-in-degrees]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :down :fn :color :key :name :update :angle :up :size :number-of-nodes :setup :middleware :host :word :key-pressed :host-id :no-start :x :draw :step :data}, :order [:x :y :color :angle :word :number-of-nodes :data :step :key :up :down :name :host :update :size :setup :middleware :key-pressed :draw :no-start :fn :host-id]}, :doc nil}