{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name distributed-hash-tool.point, :imports nil, :requires {q quil.core, quil.core quil.core, distributed-hash-tool.constant distributed-hash-tool.constant, origin distributed-hash-tool.origin, distributed-hash-tool.origin distributed-hash-tool.origin}, :uses {keywordize distributed-hash-tool.constant, grays distributed-hash-tool.constant, colors distributed-hash-tool.constant, radius distributed-hash-tool.constant}, :defs {draw {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\point.cljs", :line 11, :column 7, :end-line 11, :end-column 11, :arglists (quote ([node-x node-y data-point]))}, :name distributed-hash-tool.point/draw, :variadic false, :file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\point.cljs", :end-column 11, :method-params ([node-x node-y data-point]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 3, :fn-var true, :arglists (quote ([node-x node-y data-point]))}, draw-all {:protocol-inline nil, :meta {:file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\point.cljs", :line 27, :column 7, :end-line 27, :end-column 15, :arglists (quote ([coordinates put-animation-map get-animation-map index] [radian-positions put-animation-map get-animation-map])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([coordinates put-animation-map get-animation-map index] [radian-positions put-animation-map get-animation-map]), :arglists ([coordinates put-animation-map get-animation-map index] [radian-positions put-animation-map get-animation-map]), :arglists-meta (nil nil)}}, :name distributed-hash-tool.point/draw-all, :variadic false, :file "C:\\Users\\Lucas\\Documents\\GitHub\\distributed-hash-tool\\src\\distributed_hash_tool\\point.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([coordinates put-animation-map get-animation-map index] [radian-positions put-animation-map get-animation-map]), :arglists ([coordinates put-animation-map get-animation-map index] [radian-positions put-animation-map get-animation-map]), :arglists-meta (nil nil)}, :method-params ([coordinates put-animation-map get-animation-map index] [radian-positions put-animation-map get-animation-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 4, :fn-var true, :arglists ([coordinates put-animation-map get-animation-map index] [radian-positions put-animation-map get-animation-map])}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :color :name :center :x :step}, :order [:x :step :color :center :name :y]}, :doc nil}